name: Update EPG

on:
  schedule:
    - cron: "0 4 * * *"  # 05:00 CET / 06:00 CEST
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update_epg:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: epg-update
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clone iptv-org/epg
        run: |
          git clone --depth 1 https://github.com/iptv-org/epg.git

      - name: Set up Node.js (cache npm su epg/)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: epg/package-lock.json

      - name: Install grabber deps
        working-directory: ./epg
        run: npm ci --no-audit --no-fund

      - name: Grab all EPGs in parallel
        env:
          CHANNEL_OUTPUT_PAIRS: "channels.xml:epg.xml d_channels.xml:d_epg.xml"
        run: |
          set -e
          echo "Pairs: $CHANNEL_OUTPUT_PAIRS"

          pids=()
          names=()

          for pair in $CHANNEL_OUTPUT_PAIRS; do
            CHANNELS_FILE="${pair%%:*}"
            OUTPUT_FILE="${pair##*:}"

            echo ">> Launching grab for $CHANNELS_FILE -> $OUTPUT_FILE"

            (
              pushd epg >/dev/null
              npm run grab -- \
                --channels="${GITHUB_WORKSPACE}/${CHANNELS_FILE}" \
                --days 7 \
                --maxConnections 16 \
                --timeout 15000 \
                --output "${GITHUB_WORKSPACE}/${OUTPUT_FILE}"
              popd >/dev/null

              if [ -f "${OUTPUT_FILE}" ]; then
                echo "---- EPG SUMMARY (${OUTPUT_FILE}) ----"
                channels_count=$(grep -c "<channel" "${OUTPUT_FILE}" || true)
                progs_count=$(grep -c "<programme " "${OUTPUT_FILE}" || true)
                echo "Channels: $channels_count"
                echo "Programmes: $progs_count"
                ls -lh "${OUTPUT_FILE}"
              else
                echo "No ${OUTPUT_FILE} produced."
                exit 1
              fi
            ) &

            pids+=($!)
            names+=("${OUTPUT_FILE}")
          done

          # Wait for all parallel grabs
          fail=0
          for i in "${!pids[@]}"; do
            pid=${pids[$i]}
            name=${names[$i]}
            if wait "$pid"; then
              echo "âœ” Completed: ${name}"
            else
              echo "âœ– Failed: ${name}"
              fail=1
            fi
          done

          exit $fail

      - name: Bump EPG URL version in playlist.m3u8
        run: |
          TS=$(date -u +%Y%m%d%H)
          sed -i -E 's|(url-tvg="https://raw.githubusercontent.com/dtvabrand/Universal_Entertainment/refs/heads/main/epg\.xml)(\?[^"]*)?"|\1?ts='"$TS"'"|' playlist.m3u8

      - name: Commit changes if needed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add *_epg.xml epg.xml d_epg.xml playlist.m3u8 2>/dev/null || true
          if ! git diff --cached --quiet; then
            git commit -m "EPG Updated! ðŸ“º"
            git push
          else
            echo "No EPG changes to commit."
          fi
