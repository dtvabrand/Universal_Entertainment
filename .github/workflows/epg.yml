name: Update EPG

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update_epg:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build EPG
        run: |
          python3 - <<'PY'
          import glob, re, xml.etree.ElementTree as ET, urllib.request, urllib.error, gzip, os, io, socket
          urls = [
              'http://www.epgitalia.tv/gzip',
              'https://www.open-epg.com/files/italy1.xml.gz',
              'https://epgshare01.online/epgshare01/epg_ripper_IT1.xml.gz',
              'https://epgshare01.online/epgshare01/epg_ripper_US1.xml.gz',
              'https://epgshare01.online/epgshare01/epg_ripper_US_LOCALS2.xml.gz',
              'https://epgshare01.online/epgshare01/epg_ripper_UK1.xml.gz',
          ]
          epg_roots = []
          for url in urls:
              try:
                  resp = urllib.request.urlopen(url, timeout=60)
                  data = resp.read()
              except (urllib.error.URLError, urllib.error.HTTPError, socket.timeout):
                  continue
              if url.endswith('.xml.gz') or url.endswith('.gzip'):
                  try:
                      data = gzip.decompress(data)
                  except (OSError, EOFError):
                      continue
              try:
                  epg_roots.append(ET.fromstring(data))
              except ET.ParseError:
                  continue

          for pl in sorted(glob.glob("*.m3u8")):
              content = open(pl, "r", encoding="utf-8").read()
              tvg_ids = re.findall(r'tvg-id="([^"]+)"', content)
              root_out = ET.Element("tv")
              for epg_root in epg_roots:
                  for ch in epg_root.findall('channel'):
                      if ch.get('id') in tvg_ids:
                          root_out.append(ch)
                  for prog in epg_root.findall('programme'):
                      if prog.get('channel') in tvg_ids:
                          root_out.append(prog)

              buf = io.BytesIO()
              ET.ElementTree(root_out).write(buf, encoding='utf-8', xml_declaration=True)
              new_xml = buf.getvalue().decode('utf-8')
              new_xml = new_xml.replace(' -0400', ' +0400').replace(' +0200', ' -0200')
              out_path = os.path.splitext(pl)[0] + ".xml"
              old = open(out_path, "r", encoding="utf-8").read() if os.path.exists(out_path) else None
              if old != new_xml:
                  with open(out_path, "w", encoding="utf-8") as f:
                      f.write(new_xml)
          PY

      - name: Commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add *.xml
          changes=$(git diff --cached --name-only)
          if [ -n "$changes" ]; then
            git commit -m "EPG Updated! ðŸ“º"
            git push || echo "Push failed due to permissions or no changes."
          fi
